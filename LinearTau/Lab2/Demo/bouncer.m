close all;
clear all;

%%%%%%%%%%%%% Constants block %%%%%%%%%%%%%%
ALPHA = 75; % deg, taking off angle of the ball
V = 10; % m/s, taking off velocity 
BETA = 0.8; % velocity dissipation coefficient
GAMMA = 0.5; % 1/s, damping coefficient
N_BOUNCES = 10; % number of bounces to plot

% Вызов пользовательской функции, в данном случае процедуры
plot_ball(ALPHA, V, BETA, GAMMA, N_BOUNCES);


% Определение функции в том же файле скрипта
% Если вы определяете функцию в том же файле, в котором её используете, вы
% обязаны расположить её определение в самом конце скрипта.
% Сигнатура функции расшифровывается следующим образом:
% function [<перечень возвращаемых параметров>] = <название>(<перечень аргументов>)
function [] = plot_ball(alpha, v, beta, gamma, n_bounces)
% Тут располагается краткая справка для данной функции, отображаемая в
% левом нижнем углу матлаба при наведении на название функции
% plot_ball --- строит графики физической задачи с прыгающим мячом

% Задание константы
G = 9.81; % m/s^2 gravitational acceleration

% Определение функции с помощью лямбда-выражения. По своей сути является
% методом для передачи функций в качестве параметра. Синтаксис следующий:
% @(<перечень аргументов>) <возвращаемое значение>
% Присвоение лямбда выражения переменной сделает эту переменную синонимом
% имени этой функции.
% dzdt --- функция, возвращающая производную состояния мяча
dzdt = @(t, z) [z(3,1); z(4,1); % <- это вектор-столбец ; отделяет строку
               -z(3,1) * gamma; -G - z(4,1) * gamma];
% Вектор начальных условий
z0 = [0, 0, v * cos(alpha * pi / 180), v * sin(alpha * pi / 180)];
t0 = 0;
% Инициализация пустых матриц
z = [];
t = [];
% Моделируем каждый отскок по отдельности
for k=1:n_bounces
    % Вызов пользовательской функции, находящейся в отдельном файле
    [tk, zk, te, ze] = calc_bounce(z0, t0, dzdt);
    % tk --- вектор-столбец единиц времени моделирования
    % zk --- вектор-столбец векторов-строк состояний мяча в процессе
    %        моделирования
    % te --- вектор-столбец моментов времени, в которые мяч ударяется о пол
    % ze --- вектор-столбец векторов-строк состояний мяча в моменты
    %        времени, когда мяч ударяется о пол

    % Переинициализируем начальные условия:
    z0 = ze(1,:); % Это означает, что берется первая строка (1), и все стобцы (:)
    t0 = te(1);
    % Учитываем потери энергии при ударе о землю
    z0(1, 4) = -z0(1, 4) * beta; % Vy == z0(1,4)

    % Объединяем к-тый отскок с остальными с помощью операции конкатенации
    z = [z; zk];
    t = [t; tk];
end
% Вызов пользовательской функции, определение которой находится в отдельном
% файле
plot_bounces(t, z);
end % <-- завершение определения пользовательской функции
